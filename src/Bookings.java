
import com.sun.glass.events.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author mihai
 */
public class Bookings extends javax.swing.JFrame {
    String userName, eventID, userID;
    Connection connection;
    double firstClassTicketPrice, secondClassTicketPrice, orgTicketPrice, totalPrice;
    ResultSet result;
    PreparedStatement featchEvents, featchEventDetails, featchEventBands, featchUserLevel, insertBooking;
    
    
   
    
   public Bookings(String userName){
        super("Booking");
        this.userName = userName;
        connection = DB_Connection.get_connection();
        initComponents();
        fillEvents();
        eventDetails.setVisible(false);
    }
   
    public Bookings(String userName, String eventID){
        super("Booking");
        this.userName = userName;
        this.eventID = eventID;
        connection = DB_Connection.get_connection();
        initComponents();
        fillEvents();
        eventDetails.setVisible(false);
    }
    
     public Bookings() {
        super("Booking"); 
        connection = DB_Connection.get_connection();
        initComponents();
        fillEvents();
        eventDetails.setVisible(false);
    }
     
     private void fillEvents(){
        String getEventsSQL = "SELECT events.title FROM performances INNER JOIN events On performances.event = events.id WHERE performances.date >?";
        try{
            featchEvents = connection.prepareStatement(getEventsSQL);
            String pattern = "yyyy-MM-dd";
            String dateInString = new SimpleDateFormat(pattern).format(new Date());
            featchEvents.setString(1, dateInString);
            result = featchEvents.executeQuery();
            
            while(result.next()){
                eventToLookAt.addItem(result.getString("title"));
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
     
    private void fillEventDates(){
        
        String getEventsSQL = "SELECT performances.date FROM performances INNER JOIN events On performances.event = events.id WHERE events.title =? AND performances.date >?";
        try{
            featchEvents = connection.prepareStatement(getEventsSQL);
            featchEvents.setString(1, eventToLookAt.getSelectedItem().toString());
            Date date = new Date();
            String modifiedDate = new SimpleDateFormat("yyyy-MM-dd").format(date);
            featchEvents.setString(2, modifiedDate);
            result = featchEvents.executeQuery();
            while(result.next()){
                selectedEventDate.addItem(result.getString("date"));
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    } 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        eventToLookAt = new javax.swing.JComboBox();
        SelectDate = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        eventDetails = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        location = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        eventDate = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        labelForCorpPrice = new javax.swing.JLabel();
        firstClassTicket = new javax.swing.JLabel();
        secondClassTicket = new javax.swing.JLabel();
        orgTicket = new javax.swing.JLabel();
        createBooking = new javax.swing.JButton();
        performanceID = new javax.swing.JLabel();
        firstClassTicketsNumber = new javax.swing.JTextField();
        secondClassTicketNumbers = new javax.swing.JTextField();
        orgTicketNumbers = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        totalPriceCalculated = new javax.swing.JLabel();
        backToDashboard = new javax.swing.JButton();
        selectEvent = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        selectedEventDate = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        Exit = new javax.swing.JMenuItem();
        logout = new javax.swing.JMenuItem();
        help = new javax.swing.JMenu();
        about_us = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setFont(new java.awt.Font("MS Outlook", 0, 18)); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Welcome to the dashboard", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24))); // NOI18N

        jLabel1.setFont(new java.awt.Font("LCDMono2", 0, 48)); // NOI18N
        jLabel1.setText("Music Agency");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/global.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/musicLogo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1))
                .addGap(34, 34, 34))
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Select event");

        eventToLookAt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        SelectDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SelectDate.setText("Select");
        SelectDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectDateActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Select an event from the list to find out more information about the event");

        eventDetails.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Event details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24))); // NOI18N

        title.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        title.setText("Event title");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Event location");

        location.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        location.setText("Event Location");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Event title");

        description.setEditable(false);
        description.setColumns(20);
        description.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        description.setLineWrap(true);
        description.setRows(5);
        description.setWrapStyleWord(true);
        jScrollPane1.setViewportView(description);

        eventDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        eventDate.setText("Event date");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Event description");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Event date");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("1st class ticket price");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("2nd class ticket price");

        labelForCorpPrice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelForCorpPrice.setText("Corporate ticket price");

        firstClassTicket.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        firstClassTicket.setText("£");

        secondClassTicket.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        secondClassTicket.setText("£");

        orgTicket.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        orgTicket.setText("£");

        createBooking.setText("Book");
        createBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBookingActionPerformed(evt);
            }
        });

        performanceID.setText("  ");
        performanceID.setEnabled(false);

        firstClassTicketsNumber.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                firstClassTicketsNumberMouseMoved(evt);
            }
        });
        firstClassTicketsNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                firstClassTicketsNumberKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                firstClassTicketsNumberKeyTyped(evt);
            }
        });

        secondClassTicketNumbers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondClassTicketNumbersActionPerformed(evt);
            }
        });
        secondClassTicketNumbers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                secondClassTicketNumbersKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                secondClassTicketNumbersKeyTyped(evt);
            }
        });

        orgTicketNumbers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                orgTicketNumbersKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                orgTicketNumbersKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Total");

        totalPriceCalculated.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        totalPriceCalculated.setText("£0");

        javax.swing.GroupLayout eventDetailsLayout = new javax.swing.GroupLayout(eventDetails);
        eventDetails.setLayout(eventDetailsLayout);
        eventDetailsLayout.setHorizontalGroup(
            eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eventDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(eventDetailsLayout.createSequentialGroup()
                        .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addGroup(eventDetailsLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel7)))
                        .addGap(18, 18, 18)
                        .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eventDate, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(eventDetailsLayout.createSequentialGroup()
                        .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(eventDetailsLayout.createSequentialGroup()
                                .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(firstClassTicketsNumber, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(firstClassTicket, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(secondClassTicket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(secondClassTicketNumbers)))
                            .addGroup(eventDetailsLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(totalPriceCalculated)))
                        .addGap(18, 18, 18)
                        .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelForCorpPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(orgTicket, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createBooking, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(orgTicketNumbers))))
                .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(eventDetailsLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(eventDetailsLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, eventDetailsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(performanceID)
                        .addGap(22, 22, 22))))
        );
        eventDetailsLayout.setVerticalGroup(
            eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eventDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(title)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(eventDetailsLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(createBooking)
                            .addComponent(performanceID))
                        .addContainerGap())
                    .addGroup(eventDetailsLayout.createSequentialGroup()
                        .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(location))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(eventDate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(labelForCorpPrice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstClassTicket)
                            .addComponent(secondClassTicket)
                            .addComponent(orgTicket))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstClassTicketsNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(secondClassTicketNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(orgTicketNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(eventDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(totalPriceCalculated))
                        .addGap(14, 14, 14))))
        );

        backToDashboard.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backToDashboard.setText("Back");
        backToDashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToDashboardActionPerformed(evt);
            }
        });

        selectEvent.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        selectEvent.setText("Select");
        selectEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectEventActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Select event date");

        selectedEventDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jMenuBar1.setBackground(new java.awt.Color(153, 153, 153));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jMenuBar1.setForeground(new java.awt.Color(153, 153, 153));

        file.setText("File");

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        file.add(Exit);

        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        file.add(logout);

        jMenuBar1.add(file);

        help.setText("Help");

        about_us.setText("About us");
        help.add(about_us);

        jMenuBar1.add(help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addComponent(jLabel4)
                                .addGap(82, 82, 82)
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(selectedEventDate, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(SelectDate)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(eventDetails, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(655, 655, 655)
                                .addComponent(backToDashboard)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(eventToLookAt, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(selectEvent)
                                .addContainerGap())))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(175, 175, 175))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventToLookAt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(selectEvent))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SelectDate)
                            .addComponent(selectedEventDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(eventDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backToDashboard)
                .addGap(43, 43, 43))
        );

        setSize(new java.awt.Dimension(950, 807));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        Login login = new Login();
        login.setVisible(true);
    }//GEN-LAST:event_logoutActionPerformed

    private void SelectDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectDateActionPerformed
        // TODO add your handling code here:
        String eventDetailsSQL = "SELECT performances.id, events.title, events.full_description, events.venue, performances.date, performances.first_class_ticket_price, performances.second_class_ticket_price,"
                + " performances.corporate_ticket_price FROM performances INNER JOIN events On performances.event = events.id WHERE performances.date = ? and events.title=?";
        description.setText("");
        try{
            featchEventDetails = connection.prepareStatement(eventDetailsSQL);
            featchEventDetails.setString(1, selectedEventDate.getSelectedItem().toString());
            featchEventDetails.setString(2, eventToLookAt.getSelectedItem().toString());
            result = featchEventDetails.executeQuery();
            while(result.next()){
                performanceID.setText(result.getString("id"));
                title.setText(result.getString("title"));
                location.setText(result.getString("venue"));
                eventDate.setText(result.getString("date"));
                description.setText(result.getString("full_description"));
                firstClassTicketPrice = Double.parseDouble(result.getString("first_class_ticket_price"));
                secondClassTicketPrice = Double.parseDouble(result.getString("first_class_ticket_price"));
                orgTicketPrice = Double.parseDouble(result.getString("first_class_ticket_price"));
                firstClassTicket.setText("£" + firstClassTicketPrice + ".00");
                secondClassTicket.setText("£" + secondClassTicketPrice + ".00");
                orgTicket.setText("£" + orgTicketPrice + ".00");
                performanceID.setVisible(false);
                setBands();
            }
            
        } catch(Exception e){
             JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_SelectDateActionPerformed

    public void setBands(){
        String getBands = "SELECT bands.name FROM festival_members INNER JOIN bands ON festival_members.band = bands.id WHERE festival_members.performance = ?";
        try{
            featchEventBands = connection.prepareStatement(getBands);
            featchEventBands.setString(1, performanceID.getText());
            result = featchEventBands.executeQuery();
            description.append("\n\n\nThe following bands are participating:\n");
            while(result.next()){
                description.append(result.getString("name") + "\n");
            }
            eventDetails.setVisible(true);
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public boolean checkUserLevel(String userName){
        String getUserLevelSLQ = "SELECT users.id, users.user_level FROM users WHERE users.user_name = ?";
        String user_level="";
        try{
            featchUserLevel = connection.prepareStatement(getUserLevelSLQ);
            featchUserLevel.setString(1, userName);
            result = featchUserLevel.executeQuery();
            while(result.next()){
                userID = result.getString("id");
                user_level = result.getString("user_level");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        if(user_level.equals("corporation")){
            return true;
        }
        return false;
    }
    
    private void backToDashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToDashboardActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        Dashboard dashboard = new Dashboard(userName);
        dashboard.setVisible(true);
    }//GEN-LAST:event_backToDashboardActionPerformed

    private void createBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBookingActionPerformed
        // TODO add your handling code here:
        String createBookingSQL = "INSERT INTO `bookings` ( `user`, `performanceEvent`, `number_of_class_1st_ticket`, `number_of_class_2nd_ticket`, `number_of_class_Org_ticket`, `total`, `booking_date`) "
                + "VALUES (?,?,?,?,?,?,?);";
        try{
            insertBooking = connection.prepareStatement(createBookingSQL);
            insertBooking.setString(1, userID);
            insertBooking.setString(2, userID);
            insertBooking.setString(3, userID);
            insertBooking.setString(4, userID);
            insertBooking.setString(5, userID);
            insertBooking.setString(6, userID);
            insertBooking.setString(7, userID);
        }catch (Exception e){
           JOptionPane.showMessageDialog(null, e); 
        }
        
    }//GEN-LAST:event_createBookingActionPerformed

    private void selectEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectEventActionPerformed
        // TODO add your handling code here:
        labelForCorpPrice.setVisible(checkUserLevel(userName));
        orgTicket.setVisible(checkUserLevel(userName));
        orgTicketNumbers.setVisible(checkUserLevel(userName));
        fillEventDates();
        
    }//GEN-LAST:event_selectEventActionPerformed

    private void secondClassTicketNumbersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondClassTicketNumbersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_secondClassTicketNumbersActionPerformed

    private void firstClassTicketsNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstClassTicketsNumberKeyTyped
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if(!(Character.isDigit(a)) || (a == KeyEvent.VK_BACKSPACE) || (a == KeyEvent.VK_DELETE)){
            evt.consume();
           
        }
    }//GEN-LAST:event_firstClassTicketsNumberKeyTyped

    private void secondClassTicketNumbersKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_secondClassTicketNumbersKeyTyped
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if(!(Character.isDigit(a)) || (a == KeyEvent.VK_BACKSPACE) || (a == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_secondClassTicketNumbersKeyTyped

    private void orgTicketNumbersKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orgTicketNumbersKeyTyped
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if(!(Character.isDigit(a)) || (a == KeyEvent.VK_BACKSPACE) || (a == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_orgTicketNumbersKeyTyped

    private void firstClassTicketsNumberMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_firstClassTicketsNumberMouseMoved
        // TODO add your handling code here:
        
    }//GEN-LAST:event_firstClassTicketsNumberMouseMoved

    private void firstClassTicketsNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstClassTicketsNumberKeyReleased
        // TODO add your handling code here:
        //firstClassTicketPrice, secondClassTicketPrice, orgTicketPrice;
        calculateTotalPrice();
    }//GEN-LAST:event_firstClassTicketsNumberKeyReleased

    private void secondClassTicketNumbersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_secondClassTicketNumbersKeyReleased
        // TODO add your handling code here:
        calculateTotalPrice();
    }//GEN-LAST:event_secondClassTicketNumbersKeyReleased

    private void orgTicketNumbersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orgTicketNumbersKeyReleased
        // TODO add your handling code here:
        calculateTotalPrice();
    }//GEN-LAST:event_orgTicketNumbersKeyReleased

    public void calculateTotalPrice(){
        totalPriceCalculated.setText("£0");
        double totalPrice =0d;
        if(calculateSecondClassTicket() != 0){
            totalPrice = totalPrice + calculateSecondClassTicket();
            
        }
        
        if(calculateFirstClassTicket() != 0){
                totalPrice = totalPrice + calculateFirstClassTicket();
        }
        
        if(calculateOrgTicket() != 0){
                totalPrice = totalPrice + calculateOrgTicket();
        }
        totalPriceCalculated.setText("£" + String.valueOf(totalPrice)); 
    }
    
    public double calculateFirstClassTicket(){
        if(firstClassTicketsNumber.getText().isEmpty() || firstClassTicketsNumber.getText().equals("0")){
            return 0;
        }else{
          return Double.parseDouble(firstClassTicketsNumber.getText()) * firstClassTicketPrice;
        }
    }
    
    public double calculateSecondClassTicket(){
        if(secondClassTicketNumbers.getText().isEmpty() || secondClassTicketNumbers.getText().equals("0")){
            return 0;
        }else{
          return Double.parseDouble(secondClassTicketNumbers.getText()) * secondClassTicketPrice;
        }
    }
    
    public double calculateOrgTicket(){
        if(orgTicketNumbers.getText().isEmpty() || orgTicketNumbers.getText().equals("0")){
            return 0;
        }else{
          return Double.parseDouble(orgTicketNumbers.getText()) * orgTicketPrice;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Exit;
    private javax.swing.JButton SelectDate;
    private javax.swing.JMenuItem about_us;
    private javax.swing.JButton backToDashboard;
    private javax.swing.JButton createBooking;
    private javax.swing.JTextArea description;
    private javax.swing.JLabel eventDate;
    private javax.swing.JPanel eventDetails;
    private javax.swing.JComboBox eventToLookAt;
    private javax.swing.JMenu file;
    private javax.swing.JLabel firstClassTicket;
    private javax.swing.JTextField firstClassTicketsNumber;
    private javax.swing.JMenu help;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelForCorpPrice;
    private javax.swing.JLabel location;
    private javax.swing.JMenuItem logout;
    private javax.swing.JLabel orgTicket;
    private javax.swing.JTextField orgTicketNumbers;
    private javax.swing.JLabel performanceID;
    private javax.swing.JLabel secondClassTicket;
    private javax.swing.JTextField secondClassTicketNumbers;
    private javax.swing.JButton selectEvent;
    private javax.swing.JComboBox selectedEventDate;
    private javax.swing.JLabel title;
    private javax.swing.JLabel totalPriceCalculated;
    // End of variables declaration//GEN-END:variables
}
